<% content_for :header_tags do %>
  <%= stylesheet_link_tag 'cosmosys', :plugin => 'cosmosys' %>
  <%= stylesheet_link_tag 'cosmosys', :plugin => 'cosmosys', :media => "print" %>
<% end %>
<%
    # Helper functions ########################################################

    def truthy?(value, nilistrue = false)
      if (nilistrue and value == nil) then
        return true
      end
      options = [1, "1", true, "true", "t","yes","y"]
      return options.include?(value)
    end

    def calculate_heading(showchap, i)
      classdiv = i.csys.is_chapter? ? "cSysParentIssue" : "cSysIssue"

      chapstr = showchap ? i.chapter_str : ""

      chapstr += " " if showchap unless i.csys.is_chapter?

      chapstr += i.csys.get_identifier unless i.csys.is_chapter?

      chapstr += ':' if showchap

      return chapstr,classdiv
    end

    def calculate_complete_title(showchap, i, chapstr)
      if showchap then
        link_to chapstr, issue_path(i.id)
      else
        chapstr
      end
    end

    # Flag handling ###########################################################

    flags = {}
    # Reduce the atom list and store the value in the flags variable:
    # Txinto 2024-02-18 I've undertood this is the correct way to set the default values for the params
    [:chapnums].each {|key| flags[key] = truthy?(params[key], true)}
    [:depdiag, :status, :assigned].each {|key| flags[key] = truthy?(params[key], false)}
    #####################################################################################################
    #                                                                                                   #
    # TODO: This should not be in cosmosys, but in cosmosys_req.                                        #
    #       We need a callback.                                                                         #
    #                                                                                                   #
    [:verif, :ration, :compl, :refdoc, :appldoc].each {|key| flags[key] = truthy?(params[key], false)}  #
    #                                                                                                   #
    #####################################################################################################

    ###########################################################################
    #                                                                         #
    # TODO: This should not be in cosmosys, but in cosmosys_req.              #
    #       We need a callback.                                               #
    #                                                                         #
    rqtracker = Tracker.find_by_name("rq")                                    #
    cftype = IssueCustomField.find_by_name("rqType")                          #
    cflevel = IssueCustomField.find_by_name("rqLevel")                        #
    cfvar = IssueCustomField.find_by_name("rqVar")                            #
    cfvalue = IssueCustomField.find_by_name("rqValue")                        #
    cfdepgraph = IssueCustomField.find_by_name("depGrahInReports")            #
    cfratio = IssueCustomField.find_by_name("rqRationale")                    #
    #                                                                         #
    ###########################################################################

%>
<%
# This is a recursive lambda that draws the items and their children.
draw_items = lambda {|item, recursion, current_level|
  chapstr, classdiv = calculate_heading(flags[:chapnums], item)
  title = item.subject

  ###########################################################################
  #                                                                         #
  # TODO: This should not be in cosmosys, but in cosmosys_req.              #
  #       We need a callback.                                               #
  #                                                                         #
  if (rqtracker != nil and item.tracker == rqtracker) then                  #
    thistype = item.custom_values.where(custom_field: cftype).first.value   #
    thistype = "t:"+thistype if thistype != nil and thistype.size > 0       #
                                                                            #
    thislevel = item.custom_values.where(custom_field: cflevel).first.value #
    thislevel = "l:"+thislevel if thislevel != nil and thislevel.size > 0   #
                                                                            #
    thisvar = item.custom_values.where(custom_field: cfvar).first.value     #
    thisvar = "v:"+thisvar if thisvar != nil and thisvar.size > 0           #
                                                                            #
    thisvalue = item.custom_values.where(custom_field: cfvalue).first.value #
    thisvalue = "c:"+thisvalue if thisvalue != nil and thisvalue.size > 0   #
                                                                            #
    thisrationale = item.custom_values.where(custom_field: cfratio).first.value             #
                                                                            #
  end unless item.csys.is_chapter?                                          #
  #                                                                         #
  ###########################################################################
%>
<div class="<%= classdiv %>">
  <<%= if current_level + 1 > 6 then "span"; else "h" + (current_level + 1).to_s end %> class="heading_<%= current_level %>"><%= calculate_complete_title(flags[:chapnums], item, chapstr) %> <%= title %></<%= if current_level + 1 > 6 then "span"; else "h" + (current_level + 1).to_s end %>>
    <%                                                                                  #
  #######################################################################################
  #                                                                                     #
  # TODO: This should not be in cosmosys, but in cosmosys_req.                          #
  #       We need a callback.                                                           #
  #                                                                                     #
    if not (item.csys.is_chapter?) then                                                 #
    # TODO: if it is not a requirement, the status could be shown in a chapter          #
    if (flags[:status]) then                                                            #
    %>                                                                                  
    <p> Showing the status </p>                                                         
    <%                                                                                  #
    end # status                                                                        #
    %>                                                                                  
    <div class="<%= classdiv %>descr"><%= textilizable item, :description %></div>
    <!-- TODO: BEGIN check if there is a better way to solve https://csys.cosmobots.eu:8443/issues/6613 -->
    <br/>
    <!-- TODO: END check if there is a better way to solve https://csys.cosmobots.eu:8443/issues/6613 -->
    <%                                                                                  #
    if (flags[:ration]) and (thisrationale.length > 0) then                             #
    %>                                                                                  
    <p><b>Rationale</b>:<br/>                                                           
    <div class="<%= classdiv %>ration"><%= textilizable(thisrationale)%></div>
    <!-- TODO: BEGIN check if there is a better way to solve https://csys.cosmobots.eu:8443/issues/6613 -->
    <br/>
    <!-- TODO: END check if there is a better way to solve https://csys.cosmobots.eu:8443/issues/6613 -->
    </p>                                                                                
    <%                                                                                  #
    end # ration                                                                        #
    %>                                                                                  
    <%                                                                                  #
    if (flags[:verif]) then                                                             #
    %>                                                                                  
    <p><b>Verification</b>:<br/>                                                        
    <%                                                                                  #
    end # verif                                                                         #
    %>                                                                                  
    <%                                                                                  #
    if (flags[:compl]) then                                                             #
    %>                                                                                  
    <p><b>Compliance</b>:<br/>                                                          
    <%                                                                                  #
    end # compl                                                                         #
    %>                                                                                  
    <%                                                                                  #
    if (flags[:refdoc]) then                                                            #
    %>                                                                                  
    <p><b>RefDocs</b>:<br/>                                                             
    <%                                                                                  #
    end # refdoc                                                                        #
    %>                                                                                  
    <%                                                                                  #
    if (flags[:appldoc]) then                                                           #
    %>                                                                                  
    <p><b>ApplDocs</b>:<br/>                                                            
    <%                                                                                  #
    end # appldoc                                                                       #
    %>                                                                                  
    <%                                                                                  #
    # TODO: if it is not a requirement, the assigned could be shown in a chapter        #
    if (flags[:assigned]) then                                                          #
    %>                                                                                  
    <p> Showing the assigned </p>                                                       
    <%                                                                                  #
    end # assigned                                                                      #
    else # not(item.csys.is_chapter?)%>                                                 
    <div class="<%= classdiv %>descr"><%= textilizable item, :description %></div>
    <!-- TODO: BEGIN check if there is a better way to solve https://csys.cosmobots.eu:8443/issues/6613 -->
    <br/>
    <!-- TODO: END check if there is a better way to solve https://csys.cosmobots.eu:8443/issues/6613 -->
    <%                                                                                  #
    end # not(item.csys.is_chapter?)                                                    #
  #                                                                                     #
  #######################################################################################
    %>                                                                                  
    <%
    if (item.csys.shall_show_dependences?) then
      imagesrc = "/cosmosys_issues/"+item.id.to_s+"/dep_gv.svg"
      if flags[:depdiag] then
        show_this_image = false
        thisdepgraphflag = item.custom_field_values.select{|a| a.custom_field_id == cfdepgraph.id }.first
        if (thisdepgraphflag != nil) then
          if (thisdepgraphflag.value == nil) then
            thisdepgraphflag.value = cfdepgraph.default_value
            item.save
          end
          if (thisdepgraphflag.value == 'Include') then
            show_this_image = true
          else
            if (thisdepgraphflag.value == 'Include if has relations') then
              show_this_image = (item.relations.size > 0)
            end
          end
        else
          show_this_image = (item.relations.size > 0)
        end

        if (show_this_image) then
        %><figure><a href="<%= imagesrc %>" ><img src="<%= imagesrc %>" alt="Dependence diagram"></a></figure><%
        end
      end
    end

%></div><%
  item.children.select{|obj| obj.csys.shall_draw}.sort_by{|obj| obj.chapter_order}.each {|subitem| recursion.(subitem, recursion,current_level+1)}
}
%>

<%= render partial: "cosmosys/report_toolbar", locals: { flags: flags } %>
<div class="<%= "cSysProject" %>">
  <% if flags[:chapnums] %><h1><%= @project.csys.code %>: <%= @project.name %></h1><% end %>
  <%
  roots = @project.issues.select{|obj| obj.parent == nil and obj.csys.shall_draw}.sort_by{|obj| obj.chapter_order}
    if roots.size == 0 then
      roots = @project.issues.select { |n| n.parent.project != @project and n.csys.shall_draw}
    end

    excluded_titles = [
      "Applicable documents",
      "Reference documents",
      "Compliance documents",
      "Compliance matrix"
    ]

    if not excluded_titles.include?(title) then
      roots.each {|i| draw_items.(i, draw_items,1)}
    else
      render partial: "cosmosys/excluded_titles/" + title.gsub(" ", "_").downcase, locals: { item: item }
    end
  %>
</div>
<%= render partial: "cosmosys/download_report_script" %>
